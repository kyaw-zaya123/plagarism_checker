{
  "openapi": "3.0.1",
  "info":
    {
      "title": "Plagiarism Checking API",
      "description": "API for uploading files, checking plagiarism, and retrieving results.",
      "version": "1.0.0",
    },
  "servers":
    [{ "url": "http://localhost:5000/apidocs", "description": "Local server" }],
  "paths":
    {
      "/register":
        {
          "post":
            {
              "summary": "Register a new user",
              "requestBody":
                {
                  "required": true,
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "object",
                              "properties":
                                {
                                  "username":
                                    {
                                      "type": "string",
                                      "description": "Username of the user",
                                    },
                                  "email":
                                    {
                                      "type": "string",
                                      "description": "Email address of the user",
                                    },
                                  "password":
                                    {
                                      "type": "string",
                                      "description": "Password for the user account",
                                    },
                                },
                              "required": ["username", "email", "password"],
                            },
                        },
                    },
                },
              "responses":
                {
                  "201":
                    {
                      "description": "User registered successfully.",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "type": "object",
                                  "properties":
                                    {
                                      "status":
                                        {
                                          "type": "string",
                                          "example": "success",
                                        },
                                      "message":
                                        {
                                          "type": "string",
                                          "example": "User registered successfully.",
                                        },
                                    },
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Invalid input data.",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "type": "object",
                                  "properties":
                                    {
                                      "status":
                                        {
                                          "type": "string",
                                          "example": "error",
                                        },
                                      "message":
                                        {
                                          "type": "string",
                                          "example": "Email already exists.",
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      "/login":
        {
          "post":
            {
              "summary": "User login to get a JWT token",
              "requestBody":
                {
                  "required": true,
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "object",
                              "properties":
                                {
                                  "username":
                                    {
                                      "type": "string",
                                      "description": "Username of the user",
                                    },
                                  "password":
                                    {
                                      "type": "string",
                                      "description": "Password of the user",
                                    },
                                },
                              "required": ["username", "password"],
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Login successful, JWT token returned.",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "type": "object",
                                  "properties":
                                    {
                                      "status":
                                        {
                                          "type": "string",
                                          "example": "success",
                                        },
                                      "token":
                                        {
                                          "type": "string",
                                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFsaWNlIn0.VZBzNpQAQFPlqPldQeHnQq3zW6znw4plFPkbkMLJzRk",
                                        },
                                    },
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Invalid username or password.",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "type": "object",
                                  "properties":
                                    {
                                      "status":
                                        {
                                          "type": "string",
                                          "example": "error",
                                        },
                                      "message":
                                        {
                                          "type": "string",
                                          "example": "Invalid credentials.",
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      "/upload":
        {
          "post":
            {
              "summary": "Upload files for plagiarism check",
              "requestBody":
                {
                  "required": true,
                  "content":
                    {
                      "multipart/form-data":
                        {
                          "schema":
                            {
                              "type": "object",
                              "properties":
                                {
                                  "file1":
                                    {
                                      "type": "string",
                                      "format": "binary",
                                      "description": "First file to upload",
                                    },
                                  "file2":
                                    {
                                      "type": "string",
                                      "format": "binary",
                                      "description": "Second file to upload",
                                    },
                                },
                              "required": ["file1", "file2"],
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Files uploaded successfully and comparison started.",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "type": "object",
                                  "properties":
                                    {
                                      "status":
                                        {
                                          "type": "string",
                                          "example": "success",
                                        },
                                      "message":
                                        {
                                          "type": "string",
                                          "example": "Comparison in progress.",
                                        },
                                      "task_id":
                                        {
                                          "type": "string",
                                          "example": "abc123",
                                        },
                                    },
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Invalid request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "type": "object",
                                  "properties":
                                    {
                                      "status":
                                        {
                                          "type": "string",
                                          "example": "error",
                                        },
                                      "message":
                                        {
                                          "type": "string",
                                          "example": "File format not supported.",
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      "/compare-files":
        {
          "post":
            {
              "summary": "Compare uploaded files for plagiarism",
              "tags": ["Plagiarism Checking"],
              "requestBody":
                {
                  "required": true,
                  "content":
                    {
                      "multipart/form-data":
                        {
                          "schema":
                            {
                              "type": "object",
                              "properties":
                                {
                                  "files":
                                    {
                                      "type": "array",
                                      "items":
                                        {
                                          "type": "string",
                                          "format": "binary",
                                        },
                                      "description": "List of files to compare. Supported formats: `.docx`, `.pdf`, `.txt`. Minimum: 2 files.",
                                    },
                                },
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "File comparison results",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "type": "object",
                                  "properties":
                                    {
                                      "message":
                                        {
                                          "type": "string",
                                          "example": "Comparison complete.",
                                        },
                                      "results":
                                        {
                                          "type": "array",
                                          "items":
                                            {
                                              "type": "object",
                                              "properties":
                                                {
                                                  "file1":
                                                    {
                                                      "type": "string",
                                                      "example": "document1.docx",
                                                    },
                                                  "file2":
                                                    {
                                                      "type": "string",
                                                      "example": "document2.docx",
                                                    },
                                                  "similarity":
                                                    {
                                                      "type": "number",
                                                      "format": "float",
                                                      "example": 85.67,
                                                    },
                                                },
                                            },
                                        },
                                    },
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Invalid input. Ensure files meet the format and size requirements.",
                    },
                  "500": { "description": "Internal server error." },
                },
            },
        },
    },
  "components":
    {
      "securitySchemes":
        {
          "BearerAuth":
            { "type": "http", "scheme": "bearer", "bearerFormat": "JWT" },
        },
    },
  "security": [{ "BearerAuth": [] }],
}
